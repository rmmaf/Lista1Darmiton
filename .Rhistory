library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
source("aknn.R")
source("knn2.R")
source("wknn.R")
df <- read.arff("arquivos/deffects2.arff")
df[,22] <- gsub("false", FALSE, df[,22])
df[,22] <- gsub("true", TRUE, df[,22])
df[,22] <- as.logical(df[,22])
train <- divideInstances(df, 0.75)[[1]]
test <- divideInstances(df, 0.75)[[2]]
m <- matrix(1:ncol(head(df)), 5)
kable(head(df)[,1:10])
df <- read.arff("arquivos/deffects2.arff")
df[,22] <- gsub("false", FALSE, df[,22])
df[,22] <- gsub("true", TRUE, df[,22])
df[,22] <- as.logical(df[,22])
train <- divideInstances(df, 0.75)[[1]]
test <- divideInstances(df, 0.75)[[2]]
m <- matrix(1:ncol(head(df)), 5)
kable(head(df[,1:10]))
df <- read.arff("arquivos/deffects2.arff")
df[,22] <- gsub("false", FALSE, df[,22])
df[,22] <- gsub("true", TRUE, df[,22])
df[,22] <- as.logical(df[,22])
train <- divideInstances(df, 0.75)[[1]]
test <- divideInstances(df, 0.75)[[2]]
kable(head(df[,1:10]))
folds <- rep_len(1:nrFolds, nrow(df))
nrFolds <- 10
folds <- rep_len(1:nrFolds, nrow(df))
View(folds)
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
print(i)
}
library(knitr)
library(tidyverse)
library(caret)
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
source("aknn.R")
source("knn2.R")
source("wknn.R")
nrFolds <- 10
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 22)
auxAccu <- append(auxAccu, result)
}
accuracy <- append(accuracy, mean(auxAccu))
}
nrFolds <- 10
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
auxAccu <- c()
for(k in 1:nrFolds) {
print("fold")
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 22)
auxAccu <- append(auxAccu, result)
}
accuracy <- append(accuracy, mean(auxAccu))
}
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
source("aknn.R")
source("knn2.R")
source("wknn.R")
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <- c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- adaptiveKnnAccuracy(i, test, train, 22)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
View(df)
unique(df[,22])
teste <- data.frame(s1 = c(1, 1, 1, 2, 3, 4), s2 = c(5, 6, 7, 5, 6, 7))
teste
teste2 <- teste[-(teste$s1 == 1),]
teste2
teste2 <- teste[(teste$s1 == 1),]
teste2
library(dplyr)
teste2 <- filter(teste, s1 != 1)
teste2
rep(2, 3)
table(teste$s1)
table(teste$s1)[1]
table(teste$s1)[1, 2]
unlist(table(teste$s1))
som <- unlist(table(teste$s1))
summary(teste$s1)
group_by(teste, s1)
group_by(teste, s1) %>% tally()
as.data.frame(group_by(teste, s1) %>% tally())
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
source("aknn.R")
source("knn2.R")
source("wknn.R")
df <- read.arff("arquivos/datatrieve.arff")
kable(head(df))
classes <- unique(df[,22])
df <- read.arff("arquivos/datatrieve.arff")
kable(head(df))
classes <- unique(df[,9])
View(classes)
df <- read.arff("arquivos/datatrieve.arff")
kable(head(df))
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 22)[[1]]
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)[[1]]
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
cat(accuracy)
cat(tempo)
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
cat(result[[2]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
print(result[[2]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
View(result[[2]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/knn2.R')
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/knn2.R')
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/wknn.R')
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/knn2.R')
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
Acertos <- data.frame(K = numeric(), Classe = character(), Acertos = numeric())
Erros <- data.frame(K = numeric(), Classe = character(), Erros = numeric())
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
acertoAux <- c()
errpAux <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result[[1]])
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
View(dfplot)
View(df)
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/knn2.R')
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/knn2.R')
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
source("aknn.R")
source("knn2.R")
source("wknn.R")
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
moda <- function(v) {
uniqv <- unique(v)
return(uniqv[which.max(tabulate(match(v, uniqv)))])
}
library(foreign)
moda <- function(v) {
uniqv <- unique(v)
return(uniqv[which.max(tabulate(match(v, uniqv)))])
}
k_proximos <- function(instance, examples, k, classCol){
x <- examples[,-classCol]
y <- examples[,classCol]
dists <- c()
classe <- c()
for (i in 1:nrow(x)) {
dists <- append(dists, dist(rbind(x[i,], instance)))
classe <- append(classe, y[i])
}
df <- data.frame(classe = classe, dists = dists)
df <- df[order(df$dists),]
proximos <- as.vector(as.numeric(rownames(df[1:k,])))
candidates <- y[as.numeric(proximos)]
result <- moda(candidates)
return(result)
}
calculateKnnAccuracy <- function(k, test, train, classCol){
predictions <- apply(test[,-classCol], 1, function(x) k_proximos(x, train, k, classCol))
testy <- test[,classCol]
dif <- predictions == testy
return(sum(dif)/length(predictions))
}
source('~/FinsAcadêmicos/Darmiton/Lista1Darmiton/knn2.R')
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
source("aknn.R")
source("knn2.R")
source("wknn.R")
df <- read.arff("arquivos/datatrieve.arff")
kable(head(df))
nrFolds <- 5
folds <- rep_len(1:nrFolds, nrow(df))
accuracy <- c()
tempo <-c()
kValue <- c(1,2,3,5,7,9,11,13,15)
for (i in kValue) {
start <- proc.time()
auxAccu <- c()
for(k in 1:nrFolds) {
fold <- which(folds == k)
train <- df[-fold,]
test <- df[fold,]
result <- calculateKnnAccuracy(i, test, train, 9)
auxAccu <- append(auxAccu, result)
}
end <- proc.time()
tempo <- append(tempo, (end - start)[[3]])
accuracy <- append(accuracy, mean(auxAccu))
}
dfplot <- data.frame(K = kValue, Acuracia = accuracy, Tempo = tempo, Razao = (accuracy/tempo))
kable(dfplot)
ggplot(dfplot, aes(x=K, y=Acuracia, colour="K",  group=1)) +
geom_line() + ggtitle("K-NN") + scale_x_continuous("K", breaks = kValue)
